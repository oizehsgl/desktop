#!/usr/bin/env bash

if [ -z "$DISPLAY" ]; then
  export DISPLAY=:0
fi

state() {
  output=$(pacmd list-sink-inputs | grep -E 'state: |application.id = "netease-cloud-music"' | sed -e 's/[[:space:]]//' | tr '\n' ',')
  if [[ $output =~ .*state:[[:space:]]*CORKED\,[[:space:]]*application\.id[[:space:]]*\=[[:space:]]*\"netease-cloud-music\".* ]]; then
    echo "paused"
    return 1
  elif [[ $output =~ .*state:[[:space:]]*RUNNING\,[[:space:]]*application\.id[[:space:]]*\=[[:space:]]*\"netease-cloud-music\".* ]]; then
    echo "running"
    return 0
  else
    echo "unknown"
    return -1
  fi
}

volume_set() {
  volume_default=40
  volume_left=$(amixer sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | awk -F% '{print $1}')
  volume_right=$(amixer sget Master | grep 'Right:' | awk -F'[][]' '{ print $2 }' | awk -F% '{print $1}')
  status_left=$(amixer sget Master | grep -E 'Left:.*\[on\]$' >/dev/null && echo on || echo off)
  status_right=$(amixer sget Master | grep -E 'Right:.*\[on\]$' >/dev/null && echo on || echo off)
  echo "Volume left ${volume_left} ${status_left} right ${volume_right} ${status_right}, restore to default volume ${volume_default}" >>/dev/stderr
  amixer --quiet set Master "${volume_default}%"
  if [ "${status_left}" = "off" ] && [ "${status_right}" = "off" ]; then
    dunstify -u normal -t 5000 -i audio-volume-muted-symbolic.symbolic 'ðŸ›ˆ Please Unmute Audio Volume' >/dev/stderr
  fi
}

notification() {
  state
  if [ "$?" = "0" ]; then
    volume_set
    dunstify -u normal -t 3000 -i netease-cloud-music 'âœ” Netease Cloud Music Playing' >/dev/stderr
  elif [ "$?" = "1" ]; then
    dunstify -u normal -t 3000 -i netease-cloud-music 'âœ˜ Netease Cloud Music Paused' >/dev/stderr
  fi
}

toggle() {
  if ! pidof netease-cloud-music >/dev/null; then
    dex /usr/share/applications/netease-cloud-music.desktop
    sleep 5
  fi
  # netease-cloud-music's default key binding is ctrl+alt+p,
  # but i want to use it in Emacs, so change to ctrl+alt+shift+p.
  xdotool key ctrl+alt+shift+p
}

case "${1}" in
  status)
    state
    ;;
  resume)
    if [ $(state) != "running" ]; then
      toggle
      sleep 1
    fi
    notification
    ;;
  pause)
    if [ $(state) = "running" ]; then
      toggle
      sleep 1
    fi
    notification
    ;;
  toggle)
    toggle
    sleep 1
    notification
    ;;
  *)
    echo -e "usage: ${0} <status|pause|resume|toggle>\n\n\tstatus      Show play status.\n\tpause       Pause play.\n\tresume      Resume play.\n\ttoggle      Toggle play." >/dev/stderr
    exit 1
    ;;
esac
