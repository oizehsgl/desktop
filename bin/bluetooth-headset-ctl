#!/usr/bin/env bash

if [ -z "${BLUETOOTH_HEADSET_NAME}" ]; then
  echo "error: BLUETOOTH_HEADSET_NAME environment variable not set" >>/dev/stderr
  exit 1
fi

headset_connected() {
  bluetoothctl devices | grep -F "${BLUETOOTH_HEADSET_NAME}" | awk '{print $2}' | xargs bluetoothctl info | grep -F 'Connected: yes' >/dev/null
}

headset_notification() {
  if headset_connected; then
    dunstify -u normal -t 3000 -i audio-headset-symbolic.symbolic '✔ Headset Connected'
  else
    dunstify -u normal -t 3000 -i audio-headset-symbolic.symbolic '✘ Headset Disconnected'
  fi
}

headset_connect() {
  delay=0
  if bluetooth | grep 'bluetooth = off' >/dev/null; then
    delay=3
  fi
  bluetooth on
  sleep $delay
  bluetoothctl power on
  sleep $delay
  for ((i = 1; i <= 10; i++)); do
    if bluetoothctl devices | grep -F "${BLUETOOTH_HEADSET_NAME}" | awk '{print $2}' | xargs bluetoothctl connect; then
      break
    fi
    sleep $delay
  done
  headset_notification
}

headset_disconnect() {
  bluetoothctl devices | grep -F "${BLUETOOTH_HEADSET_NAME}" | awk '{print $2}' | xargs bluetoothctl disconnect
  headset_notification
}

case "${1}" in
  status)
    if headset_connected; then
      echo "connected"
    else
      echo "disconnect"
    fi
    ;;
  connect)
    if ! headset_connected; then
      headset_connect
    fi
    ;;
  disconnect)
    if headset_connected; then
      headset_disconnect
    fi
    ;;
  toggle)
    if headset_connected; then
      headset_disconnect
    else
      headset_connect
    fi
    ;;
  *)
    echo -e "usage: ${0} <status|connect|disconnect|toggle>\n\n\tstatus      Headset connect status.\n\tconnect     Connect headset.\n\tdisconnect  Disconnect headset.\n\ttoggle      Headset connect/disconnect." >/dev/stderr
    exit 1
    ;;
esac
