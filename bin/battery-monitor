#!/bin/bash

SCRIPT_PATH=$(readlink "${BASH_SOURCE[0]}")
if [ -z "$SCRIPT_PATH" ]; then
  SCRIPT_PATH="${BASH_SOURCE[0]}"
fi
SCRIPT_NAME=$(basename "${SCRIPT_PATH}")
LOCK_FILE="/tmp/${SCRIPT_NAME}.lock"

if [ -z "$BATTERY_MONITOR_LOCKED" ]; then
    touch "${LOCK_FILE}"
    export BATTERY_MONITOR_LOCKED="${LOCK_FILE}"
    exec flock -x -n -o "${LOCK_FILE}" -c "${SCRIPT_PATH}"
    exit $?
fi

battery_level() {
    status="$(cat /sys/class/power_supply/BAT0/status)"
    capacity="$(cat /sys/class/power_supply/BAT0/capacity)"
    if [ "$status" = Discharging -a "$capacity" -lt 5 ]; then
        echo "EMPTY"
    elif [ "$status" = Discharging -a "$capacity" -lt 15 ]; then
        echo "LOW"
    else
        echo "OK"
    fi
}

EMPTY_MAX_TIMES=30
EMPTY_TIMES=0
LOW_TIMES=0
OK_TIMES=0
ALERT_ID=${RANDOM}

while [ true ]; do
    BATTERY_LEVEL=$(battery_level)
    case $BATTERY_LEVEL in
        EMPTY)
            let EMPTY_TIMES+=1
            LOW_TIMES=0
            OK_TIMES=0
            DELAY_SECONDS=1
            ALERT_TIMEOUT=1500
            ALERT_LEVEL="critical"
            ALERT_TITLE="Battery Empty"
            ALERT_ICON="battery-empty-symbolic.symbolic"
            HIBERNATE_COUNTDOWN_TIMES=$(( $EMPTY_MAX_TIMES - $EMPTY_TIMES ))
            if [ $HIBERNATE_COUNTDOWN_TIMES -eq 0 ]; then
                ~/bin/desktop-lock hibernate &
                HIBERNATE_BEGIN=$(date -u +"%s")
                systemctl hibernate &
                ALERT_DESCRIPTION="hibernate ..."
            elif [ $HIBERNATE_COUNTDOWN_TIMES -lt 0 ]; then
                HIBERNATE_END=$(date -u +"%s")
                HIBERNATE_ELAPSED=$(( $HIBERNATE_END - $HIBERNATE_BEGIN ))
                TIME_JUMPED=$(( $HIBERNATE_ELAPSED - -$HIBERNATE_COUNTDOWN_TIMES ))
                if [ $TIME_JUMPED -ge 3 ]; then
                    # Hibernate succeed if time jumped more than 3 seconds.
                    EMPTY_TIMES=0
                    ALERT_LEVEL=
                else
                    # Hibernate in progress.
                    ALERT_DESCRIPTION="hibernate takes ${HIBERNATE_ELAPSED} seconds"
                fi
            else
                ALERT_DESCRIPTION="hibernate after ${HIBERNATE_COUNTDOWN_TIMES} seconds ..."
            fi
            ;;
        LOW)
            let LOW_TIMES+=1
            EMPTY_TIMES=0
            OK_TIMES=0
            DELAY_SECONDS=180
            ALERT_LEVEL="critical"
            ALERT_TITLE="Battery Low"
            ALERT_DESCRIPTION="please charging ..."
            ALERT_ICON="battery-low-symbolic.symbolic"
            ALERT_TIMEOUT=10000
            ;;
        *)
            let OK_TIMES+=1
            EMPTY_TIMES=0
            LOW_TIMES=0
            DELAY_SECONDS=60
            ALERT_LEVEL=
            ;;
    esac
    if [ -n "$ALERT_LEVEL" ]; then
        echo "${ALERT_TITLE}, ${ALERT_DESCRIPTION}" | wall
        NOTIFY_COMMAND="dunstify -r ${ALERT_ID} -u ${ALERT_LEVEL} -t ${ALERT_TIMEOUT} -i ${ALERT_ICON} '${ALERT_TITLE}' '${ALERT_DESCRIPTION}'"
    else
        NOTIFY_COMMAND="dunstify -C ${ALERT_ID}"
    fi
    i3-msg exec "${NOTIFY_COMMAND}"
    sleep $DELAY_SECONDS
done
